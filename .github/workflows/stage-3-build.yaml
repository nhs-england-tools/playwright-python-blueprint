name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  run-tests:
    name: "Run Example Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps
      - name: Run your tests
        run: pytest
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-traces
          path: test-results/
          retention-days: 5
  # build-docker-image:
  #   name: "Build Docker Image"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v4
  #     - name: Stop / remove containers
  #       run: |
  #         docker stop $(docker ps -q) || true
  #         docker rm $(docker ps -aq) || true
  #     - name: Set up docker build
  #       uses: docker/setup-buildx-action@v3
  #     - name: Build image
  #       run: docker build -t playwright-python-blueprint -f buildBase.dockerfile .
  #     # - name: Run docker container
      #   id: run-container
      #   run: |
      #     docker container run -d --name playwright-python-blueprint-test \
      #       -e TZ=Europe/London \
      #       playwright-python-blueprint pytest
      #     docker wait playwright-python-blueprint-test
      #     docker logs --since=1h playwright-python-blueprint-test
